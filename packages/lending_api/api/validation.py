from marshmallow import Schema, fields, ValidationError
import typing as t
import json


class InvalidationInputError(Exception):
    """Invalid model input."""


class LendingDataRequestSchema(Schema):
    acc_now_delinq = fields.Str(allow_none=True)
    acc_open_past_24mths = fields.Float(allow_none=True)
    addr_state = fields.Str(allow_none=True)
    all_util = fields.Float(allow_none=True)
    annual_inc = fields.Float(allow_none=True)
    annual_inc_joint = fields.Float(allow_none=True)
    application_type = fields.Str(allow_none=True)
    avg_cur_bal = fields.Float(allow_none=True)
    bc_open_to_buy = fields.Float(allow_none=True)
    bc_util = fields.Float(allow_none=True)
    chargeoff_within_12_mths = fields.Float(allow_none=True)
    collections_12_mths_ex_med = fields.Float(allow_none=True)
    debt_settlement_flag = fields.Str(allow_none=True)
    debt_settlement_flag_date = fields.Str(allow_none=True)
    deferral_term = fields.Str(allow_none=True)
    delinq_2yrs = fields.Float(allow_none=True)
    delinq_amnt = fields.Float(allow_none=True)
    desc = fields.Str(allow_none=True)
    disbursement_method = fields.Str(allow_none=True)
    dti = fields.Float(allow_none=True)
    dti_joint = fields.Float(allow_none=True)
    earliest_cr_line = fields.Str(allow_none=True)
    emp_length = fields.Str(allow_none=True)
    emp_title = fields.Str(allow_none=True)
    funded_amnt = fields.Float(allow_none=True)
    funded_amnt_inv = fields.Float(allow_none=True)
    hardship_amount = fields.Float(allow_none=True)
    hardship_dpd = fields.Float(allow_none=True)
    hardship_end_date = fields.Str(allow_none=True)
    hardship_flag = fields.Str(allow_none=True)
    hardship_last_payment_amount = fields.Float(allow_none=True)
    hardship_length = fields.Float(allow_none=True)
    hardship_loan_status = fields.Str(allow_none=True)
    hardship_payoff_balance_amount = fields.Float(allow_none=True)
    hardship_reason = fields.Str(allow_none=True)
    hardship_start_date = fields.Str(allow_none=True)
    hardship_status = fields.Str(allow_none=True)
    hardship_type = fields.Str(allow_none=True)
    home_ownership = fields.Str(allow_none=True)
    id = fields.Str(allow_none=True)
    il_util = fields.Float(allow_none=True)
    initial_list_status = fields.Str(allow_none=True)
    inq_fi = fields.Float(allow_none=True)
    inq_last_12m = fields.Float(allow_none=True)
    inq_last_6mths = fields.Float(allow_none=True)
    installment = fields.Float(allow_none=True)
    int_rate = fields.Float(allow_none=True)
    issue_d = fields.Str(allow_none=True)
    loan_amnt = fields.Float(allow_none=True)
    max_bal_bc = fields.Float(allow_none=True)
    member_id = fields.Float(allow_none=True)
    mo_sin_old_il_acct = fields.Float(allow_none=True)
    mo_sin_old_rev_tl_op = fields.Float()
    mo_sin_rcnt_rev_tl_op = fields.Float()
    mo_sin_rcnt_tl = fields.Float()
    mort_acc = fields.Float()
    mths_since_last_delinq = fields.Float(allow_none=True)
    mths_since_last_major_derog = fields.Float()
    mths_since_last_record = fields.Float()
    mths_since_rcnt_il = fields.Float(allow_none=True)
    mths_since_recent_bc = fields.Float(allow_none=True)
    mths_since_recent_bc_dlq = fields.Float()
    mths_since_recent_inq = fields.Float(allow_none=True)
    mths_since_recent_revol_delinq = fields.Float()
    num_accts_ever_120_pd = fields.Float()
    num_actv_bc_tl = fields.Float()
    num_actv_rev_tl = fields.Float()
    num_bc_sats = fields.Float()
    num_bc_tl = fields.Float()
    num_il_tl = fields.Float()
    num_op_rev_tl = fields.Float()
    num_rev_accts = fields.Float()
    num_rev_tl_bal_gt_0 = fields.Float()
    num_sats = fields.Float()
    num_tl_120dpd_2m = fields.Float()
    num_tl_30dpd = fields.Float()
    num_tl_90g_dpd_24m = fields.Float()
    num_tl_op_past_12m = fields.Float()
    open_acc = fields.Float()
    open_acc_6m = fields.Float()
    open_act_il = fields.Float()
    open_il_12m = fields.Float()
    open_il_24m = fields.Float()
    open_rv_12m = fields.Float()
    open_rv_24m = fields.Float()
    orig_projected_additional_accrued_interest = fields.Float()
    payment_plan_start_date = fields.Str()
    pct_tl_nvr_dlq = fields.Float()
    percent_bc_gt_75 = fields.Float(allow_none=True)
    pub_rec = fields.Float()
    pub_rec_bankruptcies = fields.Float()
    purpose = fields.Str()
    pymnt_plan = fields.Str()
    revol_bal = fields.Float()
    revol_bal_joint = fields.Float()
    revol_util = fields.Float(allow_none=True)
    sec_app_chargeoff_within_12_mths = fields.Float()
    sec_app_collections_12_mths_ex_med = fields.Float()
    sec_app_earliest_cr_line = fields.Str()
    sec_app_inq_last_6mths = fields.Float()
    sec_app_mort_acc = fields.Float()
    sec_app_mths_since_last_major_derog = fields.Float()
    sec_app_num_rev_accts = fields.Float()
    sec_app_open_acc = fields.Float()
    sec_app_open_act_il = fields.Float()
    sec_app_revol_util = fields.Float()
    settlement_amount = fields.Float()
    settlement_date = fields.Str()
    settlement_percentage = fields.Float()
    settlement_status = fields.Str()
    settlement_term = fields.Str()
    tax_liens = fields.Float()
    term = fields.Str()
    title = fields.Str()
    tot_coll_amt = fields.Float()
    tot_cur_bal = fields.Float()
    tot_hi_cred_lim = fields.Float()
    total_acc = fields.Float()
    total_bal_ex_mort = fields.Float()
    total_bal_il = fields.Float()
    total_bc_limit = fields.Float()
    total_cu_tl = fields.Float()
    total_il_high_credit_limit = fields.Float()
    total_rev_hi_lim = fields.Float()
    url = fields.Str()
    verification_status = fields.Str()
    verification_status_joint = fields.Str()
    zip_code = fields.Str()


def validate_inputs(input_data):
    """Check prediction inputs against the schema."""
    # allow passing in a list
    schema = LendingDataRequestSchema(many=True)

    errors = None
    try:
        schema.load(input_data)
    except ValidationError as exc:
        errors = exc.messages

    validated_input = input_data

    return validated_input, errors
